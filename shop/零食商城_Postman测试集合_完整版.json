{
  "info": {
    "name": "零食商城系统测试集合完整版",
    "description": "基于实际代码分析的完整零食商城系统功能测试",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "1. 系统健康检查",
      "item": [
        {
          "name": "检查系统状态",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/products/public/list?page=1&size=5",
              "host": ["{{base_url}}"],
              "path": ["products", "public", "list"],
              "query": [
                {"key": "page", "value": "1"},
                {"key": "size", "value": "5"}
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('系统状态正常', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('响应格式正确', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('code');",
                  "    pm.expect(jsonData).to.have.property('data');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "获取轮播图",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/banners/public/list",
              "host": ["{{base_url}}"],
              "path": ["banners", "public", "list"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('轮播图接口正常', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "获取分类树",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/categories/public/tree",
              "host": ["{{base_url}}"],
              "path": ["categories", "public", "tree"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('分类接口正常', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "2. 用户认证测试",
      "item": [
        {
          "name": "管理员登录",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('管理员登录成功', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.data && response.data.token) {",
                  "        pm.environment.set('token_admin', response.data.token);",
                  "        pm.environment.set('admin_user', JSON.stringify(response.data.user));",
                  "        console.log('管理员登录成功，Token已保存');",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"{{admin_username}}\",\n  \"password\": \"{{admin_password}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            }
          }
        },
        {
          "name": "商家登录",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('商家登录成功', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.data && response.data.token) {",
                  "        pm.environment.set('token_merchant', response.data.token);",
                  "        pm.environment.set('merchant_user', JSON.stringify(response.data.user));",
                  "        console.log('商家登录成功，Token已保存');",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"{{merchant_username}}\",\n  \"password\": \"{{merchant_password}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            }
          }
        },
        {
          "name": "普通用户登录",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('用户登录成功', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.data && response.data.token) {",
                  "        pm.environment.set('token_user', response.data.token);",
                  "        pm.environment.set('user_info', JSON.stringify(response.data.user));",
                  "        console.log('用户登录成功，Token已保存');",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"{{user_username}}\",\n  \"password\": \"{{user_password}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            }
          }
        },
        {
          "name": "用户注册",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"testuser{{$randomInt}}\",\n  \"password\": \"123456\",\n  \"confirmPassword\": \"123456\",\n  \"nickname\": \"测试用户{{$randomInt}}\",\n  \"phone\": \"13800138000\",\n  \"email\": \"test{{$randomInt}}@example.com\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('用户注册成功', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "商家注册申请",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token_user}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"shopName\": \"测试商店{{$randomInt}}\",\n  \"shopDescription\": \"这是一个测试商店\",\n  \"contactPhone\": \"13800138000\",\n  \"businessLicense\": \"123456789012345\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/merchant/register",
              "host": ["{{base_url}}"],
              "path": ["auth", "merchant", "register"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('商家注册申请成功', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "3. 商品管理测试",
      "item": [
        {
          "name": "获取商品列表",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/products/public/list?page=1&size=10",
              "host": ["{{base_url}}"],
              "path": ["products", "public", "list"],
              "query": [
                {"key": "page", "value": "1"},
                {"key": "size", "value": "10"}
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('商品列表接口正常', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('分页结构正确', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data).to.have.property('total');",
                  "    pm.expect(jsonData.data).to.have.property('list');",
                  "    pm.expect(jsonData.data).to.have.property('currentPage');",
                  "});",
                  "",
                  "// 设置测试商品ID",
                  "if (pm.response.code === 200) {",
                  "    const jsonData = pm.response.json();",
                  "    if (jsonData.data && jsonData.data.list && jsonData.data.list.length > 0) {",
                  "        pm.environment.set('test_product_id', jsonData.data.list[0].id);",
                  "        console.log('测试商品ID已设置:', jsonData.data.list[0].id);",
                  "    }",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "按分类筛选商品",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/products/public/list?page=1&size=10&categoryId=1",
              "host": ["{{base_url}}"],
              "path": ["products", "public", "list"],
              "query": [
                {"key": "page", "value": "1"},
                {"key": "size", "value": "10"},
                {"key": "categoryId", "value": "1"}
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('分类筛选正常', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "关键词搜索商品",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/products/public/list?page=1&size=10&keyword=巧克力",
              "host": ["{{base_url}}"],
              "path": ["products", "public", "list"],
              "query": [
                {"key": "page", "value": "1"},
                {"key": "size", "value": "10"},
                {"key": "keyword", "value": "巧克力"}
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('关键词搜索正常', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "价格排序（低到高）",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/products/public/list?page=1&size=10&sort=price_asc",
              "host": ["{{base_url}}"],
              "path": ["products", "public", "list"],
              "query": [
                {"key": "page", "value": "1"},
                {"key": "size", "value": "10"},
                {"key": "sort", "value": "price_asc"}
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('价格排序正常', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "获取商品详情",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/products/public/{{test_product_id}}",
              "host": ["{{base_url}}"],
              "path": ["products", "public", "{{test_product_id}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('商品详情正常', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('商品信息完整', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data).to.have.property('id');",
                  "    pm.expect(jsonData.data).to.have.property('name');",
                  "    pm.expect(jsonData.data).to.have.property('price');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "4. 购物车测试",
      "item": [
        {
          "name": "添加商品到购物车",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token_user}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"productId\": {{test_product_id}},\n  \"quantity\": 2\n}"
            },
            "url": {
              "raw": "{{base_url}}/cart/add",
              "host": ["{{base_url}}"],
              "path": ["cart", "add"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('添加购物车成功', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "获取购物车列表",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token_user}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/cart/list",
              "host": ["{{base_url}}"],
              "path": ["cart", "list"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('购物车列表正常', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "if (pm.response.code === 200) {",
                  "    const jsonData = pm.response.json();",
                  "    if (jsonData.data && jsonData.data.length > 0) {",
                  "        pm.environment.set('test_cart_item_id', jsonData.data[0].id);",
                  "        console.log('测试购物车项ID已设置:', jsonData.data[0].id);",
                  "    }",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "更新购物车商品数量",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token_user}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/cart/{{test_cart_item_id}}/quantity?quantity=3",
              "host": ["{{base_url}}"],
              "path": ["cart", "{{test_cart_item_id}}", "quantity"],
              "query": [
                {"key": "quantity", "value": "3"}
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('更新数量成功', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "切换商品选择状态",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token_user}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/cart/{{test_cart_item_id}}/toggle",
              "host": ["{{base_url}}"],
              "path": ["cart", "{{test_cart_item_id}}", "toggle"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('切换选择状态成功', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "获取购物车统计",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token_user}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/cart/summary",
              "host": ["{{base_url}}"],
              "path": ["cart", "summary"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('购物车统计正常', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "删除购物车商品",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token_user}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/cart/{{test_cart_item_id}}",
              "host": ["{{base_url}}"],
              "path": ["cart", "{{test_cart_item_id}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('删除购物车商品成功', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    }
  ]
}
